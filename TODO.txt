Demo
{
    [] On hot code reload, consider initializing gamestate objects by reading the game_memory_x.memory file, as currently on hot code reload we execute all the code for initialization of gamestate and throw it away as during playback we read the state from the above mentioned file.
    [] Bug: In Spritesheet struct we store the Opengl VAO and texture Ids, and spritesheets are stored in gameStateStorage. On hot code reload we read the gameStateStorage off the disk which restores old OpenGL texture and VAO ids for the spritesheets. However there is no guarantee that OpenGL will provide us the same texture and VAO ids when we genTex/genBuff on hot code reload which can crash the program. 
    [] UI
    {
        [] Start game button
        [] Highscorers list..??
        [] Render Score and Lives remaining
    }
    [] Shorten the explosion sound
    [] Temporary storage functionality for loading shader strings
}

API
{
    [x] Rethink file organization
    {
        [x] api_function_spec.h -> declare  functions
    }
    [x] Update PfglRenderWindow to use modern OpenGL
    [] Memory Management
    [] Error handling strategy
    
    [x] Compress the OpenGL image creation and rendering(already copy pasted the same code three times for spaceship, asteroids and bullets)
    [*] Sound System 
    {
        [] Preferrably on separate thread
    }
    [x] Clean up application.cpp
    [x] Organize and Clean up Gamestate memory allocation and hot code reload logic 
    [x] Figure out how to make the sound interface.
    [x] Fix File API
    
}

Windows
{
    [x] Abstract away the message pump
    [x] Cross platform virtual key codes
    [x] Review window creation.
    [x] Review PfWindow struct.
    [x] Review resizing.
    [x] Render offscreenbuffer and blit it.
    [x] Option to get fullscreen mode.
    [] Updation
    {
        [x] Key and mouse events
        [] Fix the mouse coordinates bug where the PfGetMouseCoordinates returns true 
        even when another window is on top of our window. 
        
            [x] Study Focus events
        [] WM_CLOSE, WM_QUIT, etc
    }
    [x] Timers(ms clock and cycles clock).
    [x] Sleep
    [x] OpenGL
	[x] Create a 1.1 gl context creation path when wglCreateContextARB isn't available
    
    [x] Convert wglMakeCurrents in code tp PfMakeCurrents
    
    [?] Bug: Software blit doesnt work in fullscreen mode after I added OpenGL context
    {
        HACK(KARAN): stretchdibits doesn't work in fullscreen mode when the window has an opengl context.
            So when in fullscreen mode and if we have a glContext, 
            use opengl texture rendering path.
    }
    [x] Bug: ALT + TAB to other window doesn't send ALT key up to the current Window. 
	Thus syncronization is required for when focus is gained/lost.
}

Linux
{
    [x] Abstract away the message pump
    [x] Cross platform virtual key codes
    [x] Review window creation
    [x] Review PfWindow struct
    [x] Resizing
    [x] Render offscreenbuffer and blit it
    [x] Fullscreen mode
    [] Updation
    {
        [x] Key and mouse events honoring the focus rules
        [] Closing events
    }
    [x] Timers(ms clock and cycles clock)
    [x] OpenGL
    [x] Draw Offscreen buffer using OpenGL and blend properly
    [x] Convert glxMakeCurrents in code to PfMakeCurrents
}